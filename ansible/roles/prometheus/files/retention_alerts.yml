groups:
  - name: prometheus_retention_alerts
    rules:
      # Storage Space Alerts
      - alert: PrometheusStorageSpaceHigh
        expr: (prometheus_tsdb_size_bytes{job="prometheus"} / prometheus_config_prometheus_retention_size_bytes{job="prometheus"}) * 100 > 80 and prometheus_config_prometheus_retention_size_bytes{job="prometheus"} > 0
        for: 2m  #
        labels:
          severity: warning
          service: prometheus-storage
        annotations:
          summary: "Prometheus storage space usage high"
          description: "Prometheus instance {{ $labels.instance }} is using {{ $value | printf \"%.2f\" }}% of configured retention size limit."
      - alert: PrometheusStorageSpaceCritical
        expr: (prometheus_tsdb_size_bytes{job="prometheus"} / prometheus_config_prometheus_retention_size_bytes{job="prometheus"}) * 100 > 95 and prometheus_config_prometheus_retention_size_bytes{job="prometheus"} > 0
        for: 1m  
        labels:
          severity: critical
          service: prometheus-storage
        annotations:
          summary: "Prometheus storage space critically high"
          description: "Prometheus instance {{ $labels.instance }} is using {{ $value | printf \"%.2f\" }}% of configured retention size limit. Immediate action required."
      # Retention Time Alerts
      - alert: PrometheusRetentionTimeHigh
        expr: prometheus_tsdb_lowest_timestamp_seconds{job="prometheus"} < (time() - (30 * 24 * 3600)) and up{job="prometheus"} == 1
        for: 5m
        labels:
          severity: warning
          service: prometheus-storage
        annotations:
          summary: "Prometheus data retention approaching limit"
          description: "Prometheus instance {{ $labels.instance }} has data older than 30 days. Retention cleanup may be needed."
      # WAL Alerts
      - alert: PrometheusWALSizeHigh
        expr: prometheus_tsdb_wal_fsync_duration_seconds{job="prometheus"} > 1 and up{job="prometheus"} == 1
        for: 2m  #
        labels:
          severity: warning
          service: prometheus-storage
        annotations:
          summary: "Prometheus WAL fsync duration high"
          description: "Prometheus instance {{ $labels.instance }} WAL fsync is taking {{ $value | printf \"%.2f\" }}s, indicating potential storage issues."
      # Compaction Alerts
      - alert: PrometheusCompactionFailed
        expr: rate(prometheus_tsdb_compactions_failed_total{job="prometheus"}[5m]) > 0 and up{job="prometheus"} == 1
        for: 2m  #
        labels:
          severity: warning
          service: prometheus-storage
        annotations:
          summary: "Prometheus compaction failures detected"
          description: "Prometheus instance {{ $labels.instance }} is experiencing compaction failures at {{ $value | printf \"%.2f\" }} failures/sec."
      # Block Loading Alerts
      - alert: PrometheusBlockLoadingFailed
        expr: rate(prometheus_tsdb_reloads_failures_total{job="prometheus"}[5m]) > 0 and up{job="prometheus"} == 1
        for: 2m  #
        labels:
          severity: warning
          service: prometheus-storage
        annotations:
          summary: "Prometheus block loading is failing"
          description: "Prometheus instance {{ $labels.instance }} has experienced TSDB reload failures at {{ $value | printf \"%.2f\" }} failures/sec."

  - name: loki_retention_alerts
    rules:
      # Loki Ingester Flush Failed
      - alert: LokiIngesterFlushFailed
        expr: rate(loki_ingester_flush_failed_total{job="loki"}[5m]) > 0 and up{job="loki"} == 1
        for: 2m  #
        labels:
          severity: warning
          service: loki-storage
        annotations:
          summary: "Loki ingester flush failures detected"
          description: "Loki instance {{ $labels.instance }} is experiencing flush failures at {{ $value | printf \"%.2f\" }} failures/sec."
      # Loki Compactor Failed
      - alert: LokiCompactorFailed
        expr: rate(loki_compactor_runs_failed_total{job="loki"}[5m]) > 0 and up{job="loki"} == 1
        for: 2m  #
        labels:
          severity: warning
          service: loki-storage
        annotations:
          summary: "Loki compactor failures detected"
          description: "Loki instance {{ $labels.instance }} is experiencing compactor failures at {{ $value | printf \"%.2f\" }} failures/sec."
      # Loki Retention Alerts
      - alert: LokiRetentionNotWorking
        expr: |
          (
            loki_chunk_store_index_entries_per_chunk{job="loki"} > 0
            and
            absent(rate(loki_compactor_marked_for_deletion_total{job="loki"}[1h])) or rate(loki_compactor_marked_for_deletion_total{job="loki"}[1h]) == 0
          ) and up{job="loki"} == 1
        for: 15m  
        labels:
          severity: warning
          service: loki-storage
        annotations:
          summary: "Loki retention may not be working"
          description: "Loki instance {{ $labels.instance }} has chunks but no retention deletions detected in the last hour."
      # Loki Query Performance
      - alert: LokiQueryTimeout
        expr: rate(loki_query_frontend_retries_total{job="loki"}[5m]) > 0.01 and up{job="loki"} == 1
        for: 2m  #
        labels:
          severity: warning
          service: loki-storage
        annotations:
          summary: "Loki query timeouts detected"
          description: "Loki instance {{ $labels.instance }} is experiencing query retries at {{ $value | printf \"%.2f\" }} retries/sec, indicating potential performance issues."
      # Loki WAL Alerts
      - alert: LokiWALReplayFailed
        expr: rate(loki_ingester_wal_replay_duration_seconds{job="loki"}[5m]) > 300 and up{job="loki"} == 1
        for: 2m  #
        labels:
          severity: warning
          service: loki-storage
        annotations:
          summary: "Loki WAL replay taking too long"
          description: "Loki instance {{ $labels.instance }} WAL replay is taking {{ $value | printf \"%.2f\" }}s, indicating potential storage issues."

  - name: storage_disk_alerts
    rules:
      # Disk Space Alerts for Monitoring Data
      - alert: MonitoringDiskSpaceHigh
        expr: (node_filesystem_avail_bytes{mountpoint="/opt/monitoring", job="node_exporter"} / node_filesystem_size_bytes{mountpoint="/opt/monitoring", job="node_exporter"}) * 100 < 20 and node_filesystem_size_bytes{mountpoint="/opt/monitoring", job="node_exporter"} > 0
        for: 2m  #
        labels:
          severity: warning
          service: monitoring-storage
        annotations:
          summary: "Monitoring disk space low"
          description: "Monitoring disk on {{ $labels.instance }} (mountpoint {{ $labels.mountpoint }}) is {{ $value | printf \"%.2f\" }}% full. Cleanup may be needed."
      - alert: MonitoringDiskSpaceCritical
        expr: (node_filesystem_avail_bytes{mountpoint="/opt/monitoring", job="node_exporter"} / node_filesystem_size_bytes{mountpoint="/opt/monitoring", job="node_exporter"}) * 100 < 10 and node_filesystem_size_bytes{mountpoint="/opt/monitoring", job="node_exporter"} > 0
        for: 1m  
        labels:
          severity: critical
          service: monitoring-storage
        annotations:
          summary: "Monitoring disk space critically low"
          description: "Monitoring disk on {{ $labels.instance }} (mountpoint {{ $labels.mountpoint }}) is {{ $value | printf \"%.2f\" }}% full. Immediate action required."
      # Inodes Alerts
      - alert: MonitoringInodesHigh
        expr: (node_filesystem_files_free{mountpoint="/opt/monitoring", job="node_exporter"} / node_filesystem_files{mountpoint="/opt/monitoring", job="node_exporter"}) * 100 < 20 and node_filesystem_files{mountpoint="/opt/monitoring", job="node_exporter"} > 0
        for: 2m  #
        labels:
          severity: warning
          service: monitoring-storage
        annotations:
          summary: "Monitoring filesystem inodes low"
          description: "Monitoring filesystem on {{ $labels.instance }} (mountpoint {{ $labels.mountpoint }}) has {{ $value | printf \"%.2f\" }}% free inodes ({{ with query \"node_filesystem_files_free{instance=~\\\"$instance\\\", mountpoint=~\\\"$mountpoint\\\"}\" }}{{ . | first | value | humanize }}{{ end }} free). Cleanup may be needed."
