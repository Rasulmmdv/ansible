# defaults file for iptables

# Master switch to control firewall management by this role
iptables_manage_firewall: true

# Policy controls (customizable per-host or group)
iptables_policy_input: "DROP"
iptables_policy_forward: "ACCEPT"
iptables_policy_output: "ACCEPT"

# Enable management of the DOCKER-USER chain when Docker is present
iptables_enable_docker_chain: true

# Whether to restart Docker after rules change (may disrupt running containers)
iptables_restart_docker_on_change: false

# Delay (in minutes) before emergency recovery script runs
iptables_emergency_recovery_delay_minutes: 3

# Persist rules to disk and reload service after changes
iptables_persistent_save: false

# Simple allow-lists for common ports (deprecated in favor of ufw_custom_ports)
iptables_allowed_tcp_ports: []
iptables_allowed_udp_ports: []

# Essential iptables rules that are always applied (before policies)
iptables_essential_rules:
  - { chain: 'INPUT', ctstate: 'ESTABLISHED,RELATED', comment: 'Allow established and related connections' }
  - { chain: 'INPUT', in_interface: 'lo', comment: 'Allow all loopback traffic' }
  - { chain: 'INPUT', protocol: 'icmp', comment: 'Allow essential ICMP traffic' }
  - { chain: 'INPUT', protocol: 'tcp', destination_port: '22', comment: 'Allow SSH traffic' }

# Ansible port rules (only added if ansible_port is different from default SSH port)
iptables_ansible_port_rules: []

# CIDR notation for sources allowed to access Docker containers
# It's recommended to keep this as restrictive as possible
iptables_docker_allowed_sources:
  - "127.0.0.1"        # Localhost
  - "172.17.0.0/16"    # Default Docker bridge network
  - "10.0.0.0/8"       # Private network
  - "172.16.0.0/12"    # Private network
  - "192.168.0.0/16"   # Private network

# TCP ports for Docker containers to be exposed to the world
iptables_docker_public_tcp_ports:
  - 80
  - 443

# Per-call extensions when including docker-firewall.yml from other roles
iptables_docker_public_tcp_ports_extra: []
iptables_docker_allowed_sources_extra: []

# UFW is the only host-level firewall manager. Raw iptables reserved for Docker.

# Unified custom rules for advanced use cases.
# Example item keys: chain, protocol, source, destination, in_interface, out_interface,
#                    sport, dport (or destination_port), ctstate, jump, comment
# Example:
# iptables_custom_rules:
#   - { chain: 'INPUT', protocol: 'tcp', dport: 8080, jump: 'ACCEPT', comment: 'Allow app port' }
#   - { chain: 'OUTPUT', protocol: 'udp', dport: 53, jump: 'ACCEPT', comment: 'DNS queries' }
iptables_custom_rules: []

# UFW custom ports (preferred for host-level rules)
# Defaults keep SSH/HTTP/HTTPS and WireGuard open
ufw_custom_ports:
  - { port: 22, proto: tcp }
  - { port: 80, proto: tcp }
  - { port: 443, proto: tcp }
  - { port: 51820, proto: udp }
