---
- name: Troubleshoot Prometheus and Node Exporter
  hosts: all
  gather_facts: true
  become: true

  tasks:
    - name: Run existing node_exporter diagnostics
      include_tasks: diagnose-node-exporter.yml

    - name: Check Prometheus container status
      docker_container_info:
        name: prometheus
      register: prometheus_container

    - name: Show Prometheus container status
      debug:
        var: prometheus_container.container

    - name: Check Prometheus container logs
      command: docker logs prometheus
      register: prometheus_logs
      ignore_errors: true

    - name: Show Prometheus container logs
      debug:
        var: prometheus_logs.stdout_lines

    - name: Read node_exporter target address from file
      slurp:
        src: /opt/monitoring/prometheus/config/targets/node_exporter.yml
      register: node_exporter_target_file

    - name: Parse node_exporter target address
      set_fact:
        node_exporter_address: "{{ (node_exporter_target_file.content | b64decode | from_yaml)[0].targets[0] }}"

    - name: Parse monitoring network details from JSON
      set_fact:
        monitoring_network_details: "{{ (monitoring_network.stdout | from_json) | first }}"
      when: monitoring_network.stdout is defined and monitoring_network.stdout != "Monitoring network not found"

    - name: Set monitoring network subnet fact
      set_fact:
        monitoring_subnet: "{{ monitoring_network_details.IPAM.Config[0].Subnet }}"
        monitoring_gateway: "{{ monitoring_network_details.IPAM.Config[0].Gateway }}"
      when: monitoring_network_details is defined and monitoring_network_details.IPAM.Config is defined

    - name: Test host connectivity to node_exporter via Docker bridge gateway
      uri:
        url: "http://{{ monitoring_gateway }}:9100/metrics"
        method: GET
        status_code: 200
      register: host_bridge_connectivity
      ignore_errors: true
      when: monitoring_gateway is defined

    - name: Show host-to-gateway connectivity result
      debug:
        msg: "Host to {{ monitoring_gateway }}:9100 via bridge: {{ 'SUCCESS' if (host_bridge_connectivity.status | default(0)) == 200 else 'FAILED' }}"
      when: monitoring_gateway is defined

    - name: Allow Prometheus to scrape node_exporter through the firewall (INPUT chain)
      iptables:
        action: insert
        chain: INPUT
        protocol: tcp
        destination_port: "9100"
        source: "{{ monitoring_subnet }}"
        jump: ACCEPT
        comment: "Allow monitoring subnet to reach node_exporter on the host."
      when: monitoring_subnet is defined

    - name: Allow Prometheus to scrape node_exporter through the firewall (DOCKER-USER chain)
      iptables:
        action: insert
        chain: DOCKER-USER
        protocol: tcp
        destination_port: "9100"
        source: "{{ monitoring_subnet }}"
        jump: ACCEPT
        comment: "Allow Prometheus container to scrape node_exporter on the host."
      when: monitoring_subnet is defined

    - name: Restart Prometheus container to apply all changes
      docker_container:
        name: prometheus
        state: started
        restart: yes
      register: prometheus_restart_status

    - name: Pause for 15 seconds to allow Prometheus to initialize
      pause:
        seconds: 15
      when: prometheus_restart_status.changed

    - name: Inspect Prometheus config for node_exporter job
      command: docker exec prometheus sh -lc "grep -nA4 -E 'job_name:.*node_exporter|file_sd_configs' /etc/prometheus/prometheus.yml || true"
      register: prom_cfg_snippet
      ignore_errors: true

    - name: Show Prometheus node_exporter job snippet
      debug:
        var: prom_cfg_snippet.stdout_lines

    - name: Check connectivity from Prometheus container to node_exporter
      command: "docker exec prometheus wget -qO- http://{{ node_exporter_address }}/metrics"
      register: prometheus_connectivity
      ignore_errors: true

    - name: Show connectivity test result
      debug:
        msg: "Connectivity from Prometheus to node_exporter: {{ 'SUCCESS' if prometheus_connectivity.rc == 0 else 'FAILED' }}"

    - name: Display Prometheus scrape status for node_exporter
      uri:
        url: http://localhost:9090/api/v1/targets
        method: GET
      register: prometheus_targets
      ignore_errors: true

    - name: Filter for node_exporter target status
      set_fact:
        node_exporter_target: "{{ prometheus_targets.json.data.activeTargets | selectattr('scrapePool', 'equalto', 'node_exporter') | list }}"
      when: prometheus_targets.json is defined

    - name: Show node_exporter target status
      debug:
        var: node_exporter_target
