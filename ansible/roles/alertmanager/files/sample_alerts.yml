# Comprehensive Alert Rules for Alertmanager
# ===========================================
#
# This file contains comprehensive alerting rules for:
# - System Performance (CPU, Memory, Disk, Load)
# - System Health (Network, Processes, Time)
# - Docker Containers (Health, Resources)
# - Monitoring Stack (Prometheus, Alertmanager, Grafana)
# - Network Services (Endpoints, SSL, Latency)
#
# Alert Levels:
# - WARNING: Requires attention, potential issues
# - CRITICAL: Requires immediate action, service impacting
#
# Routing:
# - WARNING alerts → Email notifications
# - CRITICAL alerts → Email + Telegram notifications
#
# Configuration:
# - Telegram alerts require bot token and chat ID in inventory
# - Email alerts require SMTP configuration in defaults
#
# Usage:
# Deploy with: ansible-playbook orchestrate.yml -e "roles_enabled=['alertmanager']"
#
groups:
  - name: system_performance_alerts
    rules:
      # CPU Monitoring
      - alert: HighCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 80
        for: 1m
        labels:
          severity: warning
          service: system
          component: cpu
        annotations:
          summary: "High CPU usage on {{ $labels.instance }}"
          description: "CPU usage is above 80% for more than 5 minutes. Current value: {{ $value | printf \"%.2f\" }}%"
          runbook: "Check running processes with 'top' or 'htop', identify high CPU consumers, consider scaling or optimization"

      - alert: CriticalCPUUsage
        expr: 100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100) > 95
        for: 30s
        labels:
          severity: critical
          service: system
          component: cpu
        annotations:
          summary: "Critical CPU usage on {{ $labels.instance }}"
          description: "CPU usage is above 95% for more than 2 minutes. Current value: {{ $value | printf \"%.2f\" }}%. System may become unresponsive."
          runbook: "URGENT: Check 'top' command, kill or restart problematic processes, consider immediate scaling"

      # Memory Monitoring
      - alert: HighMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 85
        for: 1m
        labels:
          severity: warning
          service: system
          component: memory
        annotations:
          summary: "High memory usage on {{ $labels.instance }}"
          description: "Memory usage is above 85% for more than 5 minutes. Current value: {{ $value | printf \"%.2f\" }}%"
          runbook: "Check memory usage with 'free -h', identify memory leaks, consider increasing RAM or optimizing applications"

      - alert: CriticalMemoryUsage
        expr: (node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100 > 95
        for: 30s
        labels:
          severity: critical
          service: system
          component: memory
        annotations:
          summary: "Critical memory usage on {{ $labels.instance }}"
          description: "Memory usage is above 95% for more than 2 minutes. Current value: {{ $value | printf \"%.2f\" }}%. System may start swapping heavily."
          runbook: "URGENT: Check 'free -h' and 'ps aux --sort=-%mem', restart memory-intensive processes, consider immediate RAM increase"

      - alert: LowAvailableMemory
        expr: node_memory_MemAvailable_bytes / 1024 / 1024 / 1024 < 0.5
        for: 30s
        labels:
          severity: critical
          service: system
          component: memory
        annotations:
          summary: "Very low available memory on {{ $labels.instance }}"
          description: "Available memory is below 500MB for more than 2 minutes. Current value: {{ $value | printf \"%.2f\" }}GB"
          runbook: "URGENT: System is running out of memory. Check 'free -h', kill unnecessary processes, consider emergency restart"

      # Disk Space Monitoring
      - alert: HighDiskUsage
        expr: (node_filesystem_size_bytes{mountpoint!~"/snap/.*|/run/.*|/sys/.*|/proc/.*|/dev/.*"} - node_filesystem_avail_bytes{mountpoint!~"/snap/.*|/run/.*|/sys/.*|/proc/.*|/dev/.*"}) / node_filesystem_size_bytes{mountpoint!~"/snap/.*|/run/.*|/sys/.*|/proc/.*|/dev/.*"} * 100 > 85
        for: 1m
        labels:
          severity: warning
          service: system
          component: disk
        annotations:
          summary: "High disk usage on {{ $labels.instance }}"
          description: "Disk usage on {{ $labels.mountpoint }} is above 85% for more than 5 minutes. Current value: {{ $value | printf \"%.2f\" }}%"
          runbook: "Check disk usage with 'df -h', clean up old logs/files, consider disk space increase"

      - alert: CriticalDiskUsage
        expr: (node_filesystem_size_bytes{mountpoint!~"/snap/.*|/run/.*|/sys/.*|/proc/.*|/dev/.*"} - node_filesystem_avail_bytes{mountpoint!~"/snap/.*|/run/.*|/sys/.*|/proc/.*|/dev/.*"}) / node_filesystem_size_bytes{mountpoint!~"/snap/.*|/run/.*|/sys/.*|/proc/.*|/dev/.*"} * 100 > 95
        for: 30s
        labels:
          severity: critical
          service: system
          component: disk
        annotations:
          summary: "Critical disk usage on {{ $labels.instance }}"
          description: "Disk usage on {{ $labels.mountpoint }} is above 95% for more than 2 minutes. Current value: {{ $value | printf \"%.2f\" }}%. Filesystem may become read-only."
          runbook: "URGENT: Check 'df -h {{ $labels.mountpoint }}', delete unnecessary files immediately, consider emergency disk expansion"

      - alert: LowDiskSpace
        expr: node_filesystem_avail_bytes{mountpoint!~"/snap/.*|/run/.*|/sys/.*|/proc/.*|/dev/.*"} / 1024 / 1024 / 1024 < 2
        for: 30s
        labels:
          severity: critical
          service: system
          component: disk
        annotations:
          summary: "Very low disk space on {{ $labels.instance }}"
          description: "Available disk space on {{ $labels.mountpoint }} is below 2GB for more than 2 minutes. Current value: {{ $value | printf \"%.2f\" }}GB"
          runbook: "URGENT: Filesystem is critically low on space. Use 'du -h --max-depth=1' to find large directories, clean up immediately"

  - name: system_health_alerts
    rules:
      # System Load
      - alert: HighSystemLoad
        expr: node_load5 / count(node_cpu_seconds_total{mode="idle"}) without (cpu,mode) > 3
        for: 1m
        labels:
          severity: warning
          service: system
          component: load
        annotations:
          summary: "High system load on {{ $labels.instance }}"
          description: "System load is above 3x CPU cores for more than 5 minutes. Current value: {{ $value | printf \"%.2f\" }}"
          runbook: "Check 'uptime' and 'top', identify CPU-intensive processes, consider load balancing or scaling"

      - alert: CriticalSystemLoad
        expr: node_load5 / count(node_cpu_seconds_total{mode="idle"}) without (cpu,mode) > 5
        for: 30s
        labels:
          severity: critical
          service: system
          component: load
        annotations:
          summary: "Critical system load on {{ $labels.instance }}"
          description: "System load is above 5x CPU cores for more than 2 minutes. Current value: {{ $value | printf \"%.2f\" }}. System may become unresponsive."
          runbook: "URGENT: Check 'top' and 'ps aux', kill or restart problematic processes, consider emergency scaling"

      # Network Issues
      - alert: NetworkInterfaceDown
        expr: node_network_up == 0
        for: 1m
        labels:
          severity: critical
          service: system
          component: network
        annotations:
          summary: "Network interface {{ $labels.device }} is down on {{ $labels.instance }}"
          description: "Network interface {{ $labels.device }} has been down for more than 1 minute"
          runbook: "Check 'ip link show {{ $labels.device }}', check physical connections, restart network service"

      - alert: HighNetworkErrors
        expr: rate(node_network_receive_errs_total[5m]) > 10
        for: 1m
        labels:
          severity: warning
          service: system
          component: network
        annotations:
          summary: "High network receive errors on {{ $labels.instance }}"
          description: "Network interface {{ $labels.device }} has high receive error rate. Current value: {{ $value | printf \"%.2f\" }} errors/sec"
          runbook: "Check network cables, interface status with 'ip link show', monitor network switch logs"

      # System Processes
      - alert: ZombieProcesses
        expr: node_processes_status{status="Z"} > 5
        for: 1m
        labels:
          severity: warning
          service: system
          component: processes
        annotations:
          summary: "High number of zombie processes on {{ $labels.instance }}"
          description: "There are more than 5 zombie processes. Current count: {{ $value }}"
          runbook: "Check 'ps aux | grep Z', identify parent processes that aren't reaping children, restart problematic services"

      # System Time Drift
      - alert: SystemClockDrift
        expr: abs(node_timex_offset_seconds) > 0.5
        for: 1m
        labels:
          severity: warning
          service: system
          component: time
        annotations:
          summary: "System clock drift detected on {{ $labels.instance }}"
          description: "System clock offset is greater than 0.5 seconds. Current offset: {{ $value | printf \"%.3f\" }} seconds"
          runbook: "Check NTP service status, synchronize time with 'ntpdate' or 'chronyc makestep'"

  - name: docker_container_alerts
    rules:
      # Container Health
      - alert: ContainerDown
        expr: absent(container_last_seen{name=~".+"})
        for: 1m
        labels:
          severity: critical
          service: docker
          component: container
        annotations:
          summary: "Container {{ $labels.name }} is down on {{ $labels.instance }}"
          description: "Container {{ $labels.name }} has not been seen for more than 1 minute. It may have crashed or stopped."
          runbook: "Check 'docker ps -a', check container logs with 'docker logs {{ $labels.name }}', restart if necessary"

      - alert: ContainerRestarting
        expr: rate(container_start_time_seconds{name=~".+"}[5m]) > 0
        for: 1m
        labels:
          severity: warning
          service: docker
          component: container
        annotations:
          summary: "Container {{ $labels.name }} is restarting frequently on {{ $labels.instance }}"
          description: "Container {{ $labels.name }} has restarted more than once in the last 5 minutes"
          runbook: "Check container logs with 'docker logs {{ $labels.name }}', investigate root cause, fix configuration issues"

      # Container Resource Usage
      - alert: HighContainerMemoryUsage
        expr: (container_memory_usage_bytes{name=~".+"} / container_spec_memory_limit_bytes{name=~".+"}) * 100 > 80
        for: 1m
        labels:
          severity: warning
          service: docker
          component: memory
        annotations:
          summary: "High memory usage in container {{ $labels.name }}"
          description: "Container {{ $labels.name }} is using more than 80% of its memory limit for more than 5 minutes. Current value: {{ $value | printf \"%.2f\" }}%"
          runbook: "Check container resource usage, consider increasing memory limit, optimize application memory usage"

      - alert: CriticalContainerMemoryUsage
        expr: (container_memory_usage_bytes{name=~".+"} / container_spec_memory_limit_bytes{name=~".+"}) * 100 > 95
        for: 30s
        labels:
          severity: critical
          service: docker
          component: memory
        annotations:
          summary: "Critical memory usage in container {{ $labels.name }}"
          description: "Container {{ $labels.name }} is using more than 95% of its memory limit for more than 2 minutes. Current value: {{ $value | printf \"%.2f\" }}%. Container may be OOM killed."
          runbook: "URGENT: Check 'docker stats {{ $labels.name }}', increase memory limit immediately, or restart container with more memory"

      - alert: HighContainerCPUUsage
        expr: rate(container_cpu_usage_seconds_total{name=~".+"}[5m]) * 100 > 80
        for: 1m
        labels:
          severity: warning
          service: docker
          component: cpu
        annotations:
          summary: "High CPU usage in container {{ $labels.name }}"
          description: "Container {{ $labels.name }} is using more than 80% CPU for more than 5 minutes. Current value: {{ $value | printf \"%.2f\" }}%"
          runbook: "Check 'docker stats {{ $labels.name }}', optimize application performance, consider increasing CPU limits"

      # Docker Engine Health
      - alert: DockerDaemonDown
        expr: node_systemd_unit_state{name="docker.service",state="active"} == 0
        for: 1m
        labels:
          severity: critical
          service: docker
          component: daemon
        annotations:
          summary: "Docker daemon is down on {{ $labels.instance }}"
          description: "Docker daemon service is not running for more than 1 minute"
          runbook: "Check 'systemctl status docker', check Docker logs with 'journalctl -u docker', restart Docker service"

  - name: monitoring_alerts
    rules:
      # Prometheus Health
      - alert: PrometheusDown
        expr: up{job="prometheus"} == 0
        for: 1m
        labels:
          severity: critical
          service: monitoring
          component: prometheus
        annotations:
          summary: "Prometheus is down on {{ $labels.instance }}"
          description: "Prometheus has been down for more than 1 minute. No metrics collection is happening."
          runbook: "Check Prometheus logs, check 'docker ps', restart Prometheus container, investigate configuration issues"

      - alert: PrometheusConfigurationReloadFailure
        expr: prometheus_config_last_reload_successful == 0
        for: 1m
        labels:
          severity: warning
          service: monitoring
          component: prometheus
        annotations:
          summary: "Prometheus configuration reload failed on {{ $labels.instance }}"
          description: "Prometheus failed to reload configuration for more than 5 minutes"
          runbook: "Check Prometheus logs, validate configuration syntax, check file permissions on config files"

      # Alertmanager Health
      - alert: AlertmanagerDown
        expr: up{job="alertmanager"} == 0
        for: 1m
        labels:
          severity: critical
          service: monitoring
          component: alertmanager
        annotations:
          summary: "Alertmanager is down on {{ $labels.instance }}"
          description: "Alertmanager has been down for more than 1 minute. No alerts will be processed."
          runbook: "Check Alertmanager logs, check 'docker ps', restart Alertmanager container, check configuration"

      # Node Exporter Health
      - alert: NodeExporterDown
        expr: up{job="node"} == 0
        for: 30s
        labels:
          severity: warning
          service: monitoring
          component: node-exporter
        annotations:
          summary: "Node Exporter is down on {{ $labels.instance }}"
          description: "Node Exporter has been down for more than 2 minutes. System metrics are not being collected."
          runbook: "Check 'docker ps', check Node Exporter logs, restart Node Exporter container"

      # Grafana Health
      - alert: GrafanaDown
        expr: up{job="grafana"} == 0
        for: 30s
        labels:
          severity: warning
          service: monitoring
          component: grafana
        annotations:
          summary: "Grafana is down on {{ $labels.instance }}"
          description: "Grafana has been down for more than 2 minutes. Dashboard access is unavailable."
          runbook: "Check 'docker ps', check Grafana logs, restart Grafana container"

  - name: network_service_alerts
    rules:
      # Blackbox Monitoring
      - alert: EndpointDown
        expr: probe_success == 0
        for: 1m
        labels:
          severity: critical
          service: network
          component: endpoint
        annotations:
          summary: "Endpoint {{ $labels.instance }} is down"
          description: "Endpoint {{ $labels.instance }} has been unreachable for more than 1 minute via {{ $labels.probe_type }}"
          runbook: "Check endpoint status, verify network connectivity, check firewall rules, investigate service health"

      - alert: HighResponseTime
        expr: probe_duration_seconds > 5
        for: 1m
        labels:
          severity: warning
          service: network
          component: latency
        annotations:
          summary: "High response time for {{ $labels.instance }}"
          description: "Response time for {{ $labels.instance }} is above 5 seconds for more than 5 minutes. Current value: {{ $value | printf \"%.2f\" }}s"
          runbook: "Check network latency, investigate server performance, consider CDN or caching solutions"

      - alert: SSLExpiryWarning
        expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 30
        for: 1m
        labels:
          severity: warning
          service: network
          component: ssl
        annotations:
          summary: "SSL certificate expiring soon for {{ $labels.instance }}"
          description: "SSL certificate for {{ $labels.instance }} will expire in less than 30 days"
          runbook: "Renew SSL certificate immediately, update certificate in server configuration"

      - alert: SSLExpiryCritical
        expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 7
        for: 1m
        labels:
          severity: critical
          service: network
          component: ssl
        annotations:
          summary: "SSL certificate expiring very soon for {{ $labels.instance }}"
          description: "SSL certificate for {{ $labels.instance }} will expire in less than 7 days. Current expiry: {{ $value | printf \"%.0f\" }} days"
          runbook: "URGENT: Renew SSL certificate immediately, risk of service disruption" 