#!/bin/bash
# Individual service rollback script for {{ role_name | default('monitoring service') }}
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

set -euo pipefail

SERVICE="${1:-}"
if [ -z "$SERVICE" ]; then
    echo "Usage: $0 <service_name>"
    echo "Available services:"
{% for service, config in rollback_operations.items() %}
    echo "  - {{ service }}"
{% endfor %}
    exit 1
fi

case "${SERVICE}" in
{% for service, config in rollback_operations.items() %}
    {{ service }})
        echo "üîÑ Rolling back {{ service }}..."
        
        # Stop containers
{% for container in config.containers %}
        docker container stop {{ container }} 2>/dev/null || true
        docker container rm {{ container }} 2>/dev/null || true
{% endfor %}
        
        # Stop via compose if directory exists
        if [ -d "{{ config.compose_dir }}" ]; then
            cd "{{ config.compose_dir }}"
            docker compose down --remove-orphans 2>/dev/null || true
        fi
        
        # Free up ports
{% for port in config.ports %}
        echo "Freeing port {{ port }}..."
        fuser -k {{ port }}/tcp 2>/dev/null || true
{% endfor %}
        
        # Optional: Remove data directories (commented by default)
{% if config.data_dirs %}
        # Uncomment to remove data directories:
{% for data_dir in config.data_dirs %}
        # rm -rf {{ data_dir }}
{% endfor %}
{% endif %}
        
        echo "‚úÖ {{ service }} rollback completed"
        ;;
{% endfor %}
    *)
        echo "‚ùå Unknown service: ${SERVICE}"
        exit 1
        ;;
esac

echo "üìù Service ${SERVICE} has been rolled back"
echo "üìù Data directories were preserved (see script comments to change this)"