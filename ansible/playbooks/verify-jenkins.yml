---
# Jenkins deployment verification playbook
# This playbook verifies that Jenkins is properly deployed and functioning

- name: Check mode notice for Jenkins verification
  debug:
    msg: "Running in check mode - Jenkins verification tasks will be skipped. Health checks require actual execution."
  when: ansible_check_mode

- name: Verify Jenkins deployment
  hosts: "{{ jenkins_hosts | default('jenkins') }}"
  become: true
  gather_facts: false
  vars:
    jenkins_container_name: "{{ jenkins_container_name | default('jenkins') }}"
    jenkins_home: "{{ jenkins_home | default('/var/jenkins_home') }}"
    jenkins_domain: "{{ jenkins_domain | default('localhost') }}"
    jenkins_host_port: "{{ jenkins_host_port | default(8080) }}"
    jenkins_verify_ssl_certs: "{{ jenkins_verify_ssl_certs | default(false) }}"
    jenkins_admin_username: "{{ jenkins_admin_username | default('admin') }}"
    jenkins_admin_password: "{{ jenkins_admin_password | default('changeme') }}"
  tasks:
    - name: Verify Jenkins container is running
      community.docker.docker_container_info:
        name: "{{ jenkins_container_name }}"
      register: jenkins_container_info
      failed_when: 
        - not jenkins_container_info.exists
        - jenkins_container_info.container.State.Status != "running"
      when: not ansible_check_mode
        
    - name: Display container status
      debug:
        msg:
          - "Container Status: {{ jenkins_container_info.container.State.Status | default('N/A') }}"
          - "Container ID: {{ jenkins_container_info.container.Id[:12] | default('N/A') }}"
          - "Started at: {{ jenkins_container_info.container.State.StartedAt | default('N/A') }}"
          - "Restart Count: {{ jenkins_container_info.container.RestartCount | default('N/A') }}"
          
    - name: Check Jenkins container logs for errors
      command: docker logs {{ jenkins_container_name }} --tail 50
      register: jenkins_logs
      changed_when: false
      when: not ansible_check_mode
      
    - name: Fail if permission errors found in logs
      fail:
        msg: "Permission errors detected in Jenkins logs"
      when: 
        - not ansible_check_mode
        - "'Permission denied' in jenkins_logs.stdout or 'Wrong volume permissions' in jenkins_logs.stdout"
        - "'INSTALL WARNING' in jenkins_logs.stdout"
        
    - name: Verify Jenkins home directory exists and has correct permissions
      stat:
        path: "{{ jenkins_home }}"
      register: jenkins_home_stat
      become: true
      
    - name: Display Jenkins home directory info
      debug:
        msg:
          - "Jenkins Home: {{ jenkins_home }}"
          - "Owner: {{ jenkins_home_stat.stat.pw_name | default('N/A') }}:{{ jenkins_home_stat.stat.gr_name | default('N/A') }}"
          - "Permissions: {{ jenkins_home_stat.stat.mode | default('N/A') }}"
          - "Writable: {{ jenkins_home_stat.stat.writeable | default('N/A') }}"
      when: jenkins_home_stat.stat.exists
      
    - name: Wait for Jenkins web interface to be ready
      uri:
        url: "https://{{ jenkins_domain }}/login"
        method: GET
        status_code: [200, 403]
        validate_certs: "{{ jenkins_verify_ssl_certs | default(false) }}"
      register: jenkins_health_check
      until: jenkins_health_check.status in [200, 403]
      retries: 30
      delay: 10
      when: not ansible_check_mode
      
    - name: Test Jenkins API endpoint with authentication
      uri:
        url: "https://{{ jenkins_domain }}/api/json"
        method: GET
        user: "{{ jenkins_admin_username | default('admin') }}"
        password: "{{ jenkins_admin_password | default('changeme') }}"
        force_basic_auth: yes
        status_code: 200
        validate_certs: "{{ jenkins_verify_ssl_certs | default(false) }}"
      register: jenkins_api_test
      when: not ansible_check_mode
      
    - name: Verify Jenkins version and basic info
      uri:
        url: "https://{{ jenkins_domain }}/api/json?pretty=true"
        method: GET
        user: "{{ jenkins_admin_username | default('admin') }}"
        password: "{{ jenkins_admin_password | default('changeme') }}"
        force_basic_auth: yes
        return_content: yes
        status_code: 200
        validate_certs: "{{ jenkins_verify_ssl_certs | default(false) }}"
      register: jenkins_info
      when: not ansible_check_mode
      
    - name: Display Jenkins deployment verification results
      debug:
        msg:
          - "✅ Jenkins Deployment Verification PASSED"
          - "================================================"
          - "Jenkins URL: https://{{ jenkins_domain }}"
          - "Jenkins Version: {{ (jenkins_info.content | from_json).hudson.version | default('Unknown') if (jenkins_info.content is defined and not ansible_check_mode) else 'N/A (check mode)' }}"
          - "Container Status: {{ jenkins_container_info.container.State.Status | default('N/A') }}"
          - "API Accessible: {{ 'Yes' if (jenkins_api_test.status is defined and jenkins_api_test.status == 200 and not ansible_check_mode) else 'N/A (check mode)' }}"
          - "Home Directory: {{ jenkins_home }} ({{ jenkins_home_stat.stat.pw_name | default('N/A') }}:{{ jenkins_home_stat.stat.gr_name | default('N/A') }})"
          - "================================================"
          
  handlers:
    - name: Display troubleshooting info
      debug:
        msg:
          - "❌ Jenkins verification failed. Troubleshooting info:"
          - "1. Check container logs: docker logs {{ jenkins_container_name }}"
          - "2. Check container status: docker ps -a"
          - "3. Check port availability: netstat -tulpn | grep {{ jenkins_host_port }}"
          - "4. Check Jenkins home permissions: ls -la {{ jenkins_home }}"
      listen: "jenkins verification failed"
