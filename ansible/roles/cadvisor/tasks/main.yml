---
# tasks file for cadvisor

- name: Setup cAdvisor infrastructure
  block:
    - name: Ensure Docker is running
      systemd:
        name: docker
        state: started
        enabled: yes
      become: true
      tags: [install, configure]

    - name: Ensure monitoring network exists
      community.docker.docker_network:
        name: "{{ cadvisor_network_name }}"
        state: present
      become: true
      tags: [install, configure]

    - name: Setup cAdvisor user and directories (standardized)
      include_tasks: "{{ role_path }}/../common/tasks/setup_service_user.yml"
      vars:
        service_name: "cadvisor"
        service_user: "{{ cadvisor_user }}"
        service_group: "{{ cadvisor_group }}"
        service_directories:
          - "{{ cadvisor_data_dir }}"
        directory_mode: "0755"
      tags: [install, configure]

    # Create prometheus targets directory
    - name: Create prometheus targets directory
      file:
        path: "{{ cadvisor_prometheus_config_dir | default('/opt/monitoring/prometheus/config') }}/targets"
        state: directory
        owner: "{{ cadvisor_prometheus_user_id | default('65533') }}"
        group: "{{ cadvisor_prometheus_user_id | default('65533') }}"
        mode: '0755'
      become: true
      when: cadvisor_service_discovery_enabled | default(false)
      tags: [configure, deploy]

    # Create prometheus rules directory
    - name: Create prometheus rules directory
      file:
        path: "{{ cadvisor_prometheus_config_dir | default('/opt/monitoring/prometheus/config') }}/../rules"
        state: directory
        owner: "{{ cadvisor_prometheus_user_id | default('65533') }}"
        group: "{{ cadvisor_prometheus_user_id | default('65533') }}"
        mode: '0755'
      become: true
      when: cadvisor_service_discovery_enabled | default(false)
      tags: [configure, deploy]
  when: not ansible_check_mode
  tags: [install, configure]

- name: Deploy docker-compose.yml for cadvisor
  template:
    src: docker-compose.yml.j2
    dest: "{{ cadvisor_data_dir }}/docker-compose.yml"
    owner: "{{ cadvisor_user }}"
    group: "{{ cadvisor_group }}"
    mode: '0644'
  become: true
  tags: [configure, deploy]

# Deploy service discovery file
- name: Create cadvisor targets service discovery file
  template:
    src: cadvisor_targets.yml.j2
    dest: "{{ cadvisor_prometheus_config_dir | default('/opt/monitoring/prometheus/config') }}/targets/cadvisor.yml"
    owner: "{{ cadvisor_prometheus_user_id | default('65533') }}"
    group: "{{ cadvisor_prometheus_user_id | default('65533') }}"
    mode: '0644'
  become: true
  when: cadvisor_service_discovery_enabled | default(false)
  tags: [configure, deploy]

# Deploy container monitoring alert rules
- name: Deploy container monitoring alert rules
  copy:
    src: container_alerts.yml
    dest: "{{ cadvisor_prometheus_config_dir | default('/opt/monitoring/prometheus/config') }}/../rules/container_alerts.yml"
    owner: "{{ cadvisor_prometheus_user_id | default('65533') }}"
    group: "{{ cadvisor_prometheus_user_id | default('65533') }}"
    mode: '0644'
  become: true
  when: cadvisor_service_discovery_enabled | default(false)
  notify: reload prometheus
  tags: [configure, deploy]

- name: Deploy cAdvisor with standardized Docker Compose
  include_tasks: "{{ role_path }}/../common/tasks/docker_compose_deploy.yml"
  vars:
    compose_project_name: "cadvisor"
    compose_project_src: "{{ cadvisor_data_dir }}"
    compose_pull: true
    compose_remove_orphans: true
  when: not ansible_check_mode
  tags: [deploy, start]

# Verify cAdvisor health (standardized health check)
- name: Wait for cAdvisor to be ready (health endpoint)
  include_tasks: "{{ role_path }}/../common/tasks/service_health_check.yml"
  vars:
    service_name: "cadvisor-health"
    service_url: "http://localhost:8080/healthz"
    service_port: 8080
    expected_status_codes: [200]
    max_retries: "{{ cadvisor_health_check.max_retries }}"
    retry_delay: "{{ cadvisor_health_check.retry_delay }}"
    service_container_name: "{{ cadvisor_container_name }}"
    ignore_health_check_failures: true  # This is validation
  when: not ansible_check_mode
  tags: [validate]

# Validate cAdvisor metrics endpoint (standardized health check)
- name: Wait for cAdvisor metrics to be ready
  include_tasks: "{{ role_path }}/../common/tasks/service_health_check.yml"
  vars:
    service_name: "cadvisor-metrics"
    service_url: "http://localhost:8080/metrics"
    service_port: 8080
    expected_status_codes: [200]
    max_retries: "{{ cadvisor_health_check.max_retries }}"
    retry_delay: "{{ cadvisor_health_check.retry_delay }}"
    service_container_name: "{{ cadvisor_container_name }}"
    ignore_health_check_failures: true  # This is validation
  when: not ansible_check_mode
  register: cadvisor_metrics_check
  tags: [validate]

- name: Check mode notice for cAdvisor
  debug:
    msg: "Running in check mode - cAdvisor health checks will be skipped. Health checks require actual execution."
  when: ansible_check_mode
  tags: [validate]

- name: Display cAdvisor health status
  debug:
    msg: "cAdvisor health: {{ 'HEALTHY' if (cadvisor_health_ready | default(false)) else 'UNHEALTHY' }}"
  tags: [validate]

- name: Display cAdvisor metrics status
  debug:
    msg: "cAdvisor metrics: {{ 'AVAILABLE' if (cadvisor_metrics_ready | default(false)) else 'UNAVAILABLE' }}"
  tags: [validate] 