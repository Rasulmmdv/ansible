groups:
  - name: container_resource_alerts
    rules:
      # Container CPU Alerts
      - alert: ContainerHighCPUUsage
        expr: (rate(container_cpu_usage_seconds_total[5m]) * 100) > 80
        for: 5m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} high CPU usage"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has CPU usage above 80% for more than 5 minutes. Current value: {{ $value }}%"

      - alert: ContainerCriticalCPUUsage
        expr: (rate(container_cpu_usage_seconds_total[5m]) * 100) > 95
        for: 2m
        labels:
          severity: critical
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} critical CPU usage"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has CPU usage above 95% for more than 2 minutes. Current value: {{ $value }}%"

      # Container Memory Alerts
      - alert: ContainerHighMemoryUsage
        expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} high memory usage"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has memory usage above 85% of limit for more than 5 minutes. Current value: {{ $value }}%"

      - alert: ContainerCriticalMemoryUsage
        expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) * 100 > 95
        for: 2m
        labels:
          severity: critical
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} critical memory usage"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has memory usage above 95% of limit for more than 2 minutes. Current value: {{ $value }}%"

      # Container Memory Limit Alerts
      - alert: ContainerMemoryLimitReached
        expr: container_memory_usage_bytes >= container_spec_memory_limit_bytes
        for: 1m
        labels:
          severity: critical
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} memory limit reached"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has reached its memory limit and may be killed by OOMKiller"

      # Container Disk I/O Alerts
      - alert: ContainerHighDiskIO
        expr: rate(container_fs_reads_bytes_total[5m]) + rate(container_fs_writes_bytes_total[5m]) > 100 * 1024 * 1024
        for: 5m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} high disk I/O"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has high disk I/O for more than 5 minutes. Current value: {{ $value | humanize }}B/s"

      # Container Network Alerts
      - alert: ContainerHighNetworkIO
        expr: rate(container_network_receive_bytes_total[5m]) + rate(container_network_transmit_bytes_total[5m]) > 100 * 1024 * 1024
        for: 5m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} high network I/O"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has high network I/O for more than 5 minutes. Current value: {{ $value | humanize }}B/s"

  - name: container_availability_alerts
    rules:
      # Container Restart Alerts
      - alert: ContainerRestartTooOften
        expr: rate(container_last_seen[5m]) > 0
        for: 5m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} restarting frequently"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} is restarting frequently. Check container logs for issues."

      # Container Exit Code Alerts
      - alert: ContainerExitedWithError
        expr: container_last_seen > 0 and container_exit_code != 0
        for: 1m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} exited with error"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} exited with non-zero exit code {{ $labels.exit_code }}"

      # Container State Alerts
      - alert: ContainerNotRunning
        expr: container_last_seen < time() - 300
        for: 5m
        labels:
          severity: critical
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} not running"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has not been seen for more than 5 minutes"

  - name: container_performance_alerts
    rules:
      # Container Throttling Alerts
      - alert: ContainerCPUThrottling
        expr: rate(container_cpu_cfs_throttled_seconds_total[5m]) > 0.01
        for: 5m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} CPU throttling"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} is experiencing CPU throttling. Current throttling rate: {{ $value }}s/s"

      # Container File Descriptor Alerts
      - alert: ContainerHighFileDescriptorUsage
        expr: (container_file_descriptors / container_ulimits_soft) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} high file descriptor usage"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has high file descriptor usage: {{ $value }}%"

      # Container Socket Usage Alerts
      - alert: ContainerHighSocketUsage
        expr: container_sockets > 1000
        for: 5m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} high socket usage"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has more than 1000 open sockets: {{ $value }}"

  - name: container_security_alerts
    rules:
      # Container Security Alerts
      - alert: ContainerRunningAsRoot
        expr: container_processes{user="root"} > 0
        for: 1m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} running as root"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} has processes running as root user"

      # Container Privilege Escalation
      - alert: ContainerPrivilegedMode
        expr: container_spec_memory_limit_bytes == 0 and container_spec_cpu_quota == 0
        for: 1m
        labels:
          severity: warning
          service: container-monitoring
        annotations:
          summary: "Container {{ $labels.name }} running without resource limits"
          description: "Container {{ $labels.name }} on {{ $labels.instance }} is running without CPU or memory limits"
