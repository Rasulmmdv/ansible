---
# Jenkins deployment verification tasks
# These tasks verify that Jenkins is properly deployed and functioning

- name: Check mode notice for verification
  debug:
    msg: "Running in check mode - verification tasks will be skipped. Health checks require actual execution."
  when: ansible_check_mode

- name: Verify Jenkins container health
  community.docker.docker_container_info:
    name: "{{ jenkins_container_name }}"
  register: jenkins_health_info
  failed_when: 
    - not jenkins_health_info.exists
    - jenkins_health_info.container.State.Status != "running"
  when: not ansible_check_mode

- name: Check Jenkins login page accessibility
  uri:
    url: "https://{{ jenkins_domain }}/login"
    method: GET
    status_code: 200
    validate_certs: "{{ jenkins_verify_ssl_certs | default(false) }}"
  register: jenkins_login_check
  retries: "{{ jenkins_verification.login_check.max_retries }}"
  delay: "{{ jenkins_verification.login_check.retry_delay }}"
  when: not ansible_check_mode

- name: Wait for Jenkins to be fully ready
  uri:
    url: "https://{{ jenkins_domain }}/api/json"
    method: GET
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password | default('changeme') }}"
    force_basic_auth: yes
    status_code: 200
    validate_certs: "{{ jenkins_verify_ssl_certs | default(false) }}"
  register: jenkins_readiness_check
  retries: "{{ jenkins_verification.api_check.max_retries }}"
  delay: "{{ jenkins_verification.api_check.retry_delay }}"
  until: jenkins_readiness_check.status == 200
  ignore_errors: true
  when: not ansible_check_mode

- name: Verify Jenkins API with authentication
  uri:
    url: "https://{{ jenkins_domain }}/api/json"
    method: GET
    user: "{{ jenkins_admin_username }}"
    password: "{{ jenkins_admin_password | default('changeme') }}"
    force_basic_auth: yes
    status_code: 200
    validate_certs: "{{ jenkins_verify_ssl_certs | default(false) }}"
  register: jenkins_api_check
  when: 
    - not ansible_check_mode
    - jenkins_readiness_check.status is defined and jenkins_readiness_check.status == 200

- name: Verify no critical errors in recent logs
  command: docker logs {{ jenkins_container_name }} --tail 20
  register: jenkins_recent_logs
  changed_when: false
  failed_when: 
    - "'SEVERE' in jenkins_recent_logs.stdout"
    - "'Permission denied' in jenkins_recent_logs.stdout"
  when: not ansible_check_mode

- name: Handle verification timeouts
  include_tasks: "{{ role_path }}/../common/tasks/failure_notification.yml"
  vars:
    notification_type: "warning"
    operation_name: "Jenkins verification timeout"
    error_message: "Jenkins verification timed out after {{ jenkins_verification.timeout }} seconds"
    troubleshooting_steps:
      - "Check Jenkins container status: docker logs {{ jenkins_container_name }}"
      - "Verify Jenkins domain configuration: {{ jenkins_domain }}"
      - "Check memory and CPU resources for Jenkins container"
      - "Increase timeout values in jenkins_verification configuration"
      - "Check SSL certificate configuration if using HTTPS"
    should_fail: false
  when:
    - not ansible_check_mode
    - jenkins_login_check.failed | default(false) or jenkins_readiness_check.failed | default(false)

- name: Display verification success
  debug:
    msg:
      - "âœ… Jenkins verification completed successfully"
      - "Container: {{ jenkins_container_name }} ({{ jenkins_health_info.container.State.Status }})"
      - "Login Page: Accessible ({{ jenkins_login_check.status | default('TIMEOUT') }})"
      - "API: {{ 'Authenticated access working (' + (jenkins_api_check.status|string) + ')' if jenkins_api_check.status is defined else 'Not yet ready - may need more time' }}"
      - "Logs: No critical errors detected"
      - "Configuration: Login retry delay={{ jenkins_verification.login_check.retry_delay }}s, API retry delay={{ jenkins_verification.api_check.retry_delay }}s"
  when: 
    - not ansible_check_mode
    - jenkins_verification.enabled | default(true)
